<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.1.0/mapbox-gl.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.1.0/mapbox-gl.css' rel='stylesheet' />

<div>
  
  <div id='map'style='width: 100vw; height: calc(100vh - 60px);  margin:auto ;'></div>



<div class="edupoints">
    <button class="btn btn-primary" onclick="$('.edupoints').toggleClass('active');">
      &#9776;
    </button>

  <h4>Add Points:</h4>
  
  <form action="/map" method="POST" id="add-place" >
    <input type="text" id="geoholder" name="locations">
    <label for="name">Name:</label>
    <input type="text" name="name" placeholder="Name:">
 
    <div id="geocoder" class="geocoder"></div>

    <label for="event">Event:</label>
    <input type="text" name="event" placeholder="Event:">

    <label for="information">General Information:</label>
    <input type="text" name="information" placeholder="General Information:">

    <label for="date">Date:</label>
    <input type="date" name="date" placeholder="Date:" class="datein">

    <label for="time">Time:</label>
    <input type="time" name="time" placeholder="Time:" class="datein">


  

   
     <div class="redbutton">
    <button  class="btn btn-danger redbutton" type="submit" method="get">Submit</button>
    </div>
  </form>
   
</div> 

<script>
mapboxgl.accessToken = 'pk.eyJ1IjoidHViYS1rYXNhcCIsImEiOiJjanh1ZTI0YXcwMDM4M2dtbnZ6eXJuOGs2In0.L_TRnX4VuwoBAP4cSCFCVQ';
var map = new mapboxgl.Map ({
container: 'map',
style: "mapbox://styles/tuba-kasap/cjxyyrvwr052p1crzfxpiu7iw/draft",
center: [13.375739, 52.509352],
  zoom: 14.5,
  pitch: 47.5
});

axios.get("http://localhost:7300/api/locations").then(response=>{
   response.data.forEach(place=>{
       let popup = new mapboxgl.Popup({ offset: 0, className: 'my-class' })
        .setHTML(`<div class="popup">${place.name}</div>`)
        .setMaxWidth("none")



       var marker = new mapboxgl.Marker()
  .setLngLat(place.location.coordinates)
  .setPopup(popup)
  .addTo(map);
   })
})

var geolocate = new mapboxgl.GeolocateControl({
  positionOptions: {
    enableHighAccuracy: true
  },
  trackUserLocation: true
});

map.addControl(geolocate, 'bottom-right');
map.addControl(new mapboxgl.NavigationControl(), 'bottom-right');

map.addControl(new MapboxGeocoder({
accessToken: mapboxgl.accessToken,
mapboxgl: mapboxgl
}), 'top-left'); 

map.addControl(new MapboxDirections({
accessToken: mapboxgl.accessToken
}), 'top-left');

document.getElementById('add-place').insertBefore(document.getElementsByClassName('mapboxgl-ctrl-geocoder')[0], document.getElementById('geocoder'));

{{!-- <div class="searchline"> --}}


  document.getElementById('geocoder').appendChild(geocoder.onAdd(map));
  document.querySelector("#add-place").addEventListener("submit", () => {
    document.querySelector("#geoholder").value = document.querySelector(".mapboxgl-ctrl-geocoder--input").value
  })
</script>